#+Title: Config-with-vlead-user role
#+Author: Systems Team
#+SETUPFILE: ../../org-templates/level-2.org
#+TAGS: boilerplate(b)
#+EXCLUDE_TAGS: boilerplate
#+OPTIONS: ^:nil

* Introduction
 This document describes the automation of configuring all other containers using vlead user in ansible
* Implementation
*** config-with-vlead-user role

#+BEGIN_SRC yml :tangle config-with-vlead-user/tasks/main.yml

---
# tasks file for config-with-vlead-user
  - name: test 
    command: pwd
    register: out
  - debug: var=out.stdout_lines
  - name: Copy ssh keys
    shell: sshpass -p "test" ssh-copy-id root@localhost
    register: out
  - debug: var=out.stdout_lines
  - name: Copy ssh keys
    shell: sshpass -p "test" ssh-copy-id root@127.0.0.1
    register: out
  - debug: var=out.stdout_lines
  - name: Copy ssh keys
    shell: sshpass -p "test" ssh-copy-id root@10.100.1.1
    register: out
  - debug: var=out.stdout_lines

#tasks file for config-with-vlead-user
  - include: copy-sshkeys.yml
  - include: setupemacs.yml
  - include: changes_in_makefile.yml

 
  - name: change directory and run make file
    command: make
    register: out
    args: 
      chdir: ~/systems-model/
  - debug: var=out.stdout_lines
 
  - name: Copying build file 
    command: sudo cp -r build/{{clustername}} /root/
    register: out
    args:
     chdir: ~/systems-model/
  - debug: var=out.stdout_lines

  - name: checking syntax of ansible playbook
    command: ansible-playbook -i hosts --list-tasks --syntax-check site.yaml
    register: out
    args:
     chdir: ~/systems-model/build/{{clustername}}
  - debug: var=out.stdout_lines
  - include: set-proxy.yml
  - include: dns.yml
  - include: router.yml
  - include: ads.yml
  - include: knownhost.yml
  - include: gitclone_to_ads.yml
  - include: replace_proxy_in_config-sh.yml
  - include: cluster_site.yml
  - include: site_modify.yml
  - include: site_run.yml


#+END_SRC

#+BEGIN_SRC yml :tangle config-with-vlead-user/tasks/copy-sshkeys.yml

---
 - name: Copy ssh keys
   shell: sshpass -p "test" ssh-copy-id root@localhost
   register: out
 - debug: var=out.stdout_lines
 
 - name: Copy ssh keys
   shell: sshpass -p "test" ssh-copy-id root@127.0.0.1
   register: out
 - debug: var=out.stdout_lines

 - name: Copy ssh keys
   shell: sshpass -p "test" ssh-copy-id root@10.100.1.1
   register: out
 - debug: var=out.stdout_lines

 - name: Copy ssh keys
   shell: sshpass -p "test" ssh-copy-id root@10.100.1.2
   register: out
 - debug: var=out.stdout_lines
 
 - name: Copy ssh keys
   shell: sshpass -p "test" ssh-copy-id root@10.100.1.3
   register: out
 - debug: var=out.stdout_lines
 
 - name: Copy ssh keys
   shell: sshpass -p "test" ssh-copy-id root@10.100.1.4
   register: out
 - debug: var=out.stdout_lines

 - name: Copy ssh keys
   shell: sshpass -p "test" ssh-copy-id root@10.100.1.5
   register: out
 - debug: var=out.stdout_lines
 
 - name: Copy ssh keys
   shell: sshpass -p "test" ssh-copy-id root@10.100.1.6
   register: out
 - debug: var=out.stdout_lines

 - name: Copy ssh keys
   shell: sshpass -p "test" ssh-copy-id root@10.100.1.7
   register: out
 - debug: var=out.stdout_lines

 - name: Copy ssh keys
   shell: sshpass -p "test" ssh-copy-id root@10.100.1.8
   register: out
 - debug: var=out.stdout_lines

 - name: Copy ssh keys
   shell: sshpass -p "test" ssh-copy-id root@10.100.1.9
   register: out
 - debug: var=out.stdout_lines

 - name: Copy ssh keys
   shell: sshpass -p "test" ssh-copy-id root@10.100.1.10
   register: out
 - debug: var=out.stdout_lines



#+END_SRC

#+BEGIN_SRC yml :tangle config-with-vlead-user/tasks/setupemacs.yml

---

- name: Downloading Emacs
  file: path=emacs/lisp mode=0755 state=directory

- name: un-tar  downloaded file
  unarchive: src=http://orgmode.org/org-8.2.10.tar.gz dest=/home/vlead/emacs/lisp/ remote_src=True
  environment: "{{proxy_env}}"



#+END_SRC

#+BEGIN_SRC yml :tangle config-with-vlead-user/tasks/changes_in_makefile.yml

---
- replace:
      path: systems-model/makefile
      regexp: "ROUTER_IP=10.4.14.207"
      replace: "ROUTER_IP={{ipaddress.router}}"

- replace:
      path: systems-model/makefile
      regexp: "CONFIG_SERVER=10.4.14.208"
      replace: "CONFIG_SERVER={{ipaddress.config_server}}"


- replace:
      path: systems-model/makefile
      regexp: "CLUSTER=cluster"
      replace: "CLUSTER={{clustername}}"


- replace:
      path: systems-model/makefile
      regexp: "SMTP_SMART_HOST= smtp.admin.iiit.ac.in"
      replace: "SMTP_SMART_HOST=stpi-router.vlabs.ac.in"


#+END_SRC

#+BEGIN_SRC yml :tangle config-with-vlead-user/tasks/set-proxy.yml


- name: Copy set-proxy to ansible container
  template: src=set-proxy.yml dest=systems-model/build/{{clustername}}/

- name: Run  set-proxy.yml file to set proxy in all other containers
  command: ansible-playbook -i hosts set-proxy.yml
  register: out
  args: 
    chdir: systems-model/build/{{clustername}}/
- debug: var=out.stdout_lines


#+END_SRC

#+BEGIN_SRC yml :tangle config-with-vlead-user/tasks/dns.yml

---
- name: Commenting rsnapshot_client 
  lineinfile: 
     path: systems-model/build/{{clustername}}/public_dns.yaml
     regexp: '- rsnapshot_client'
     line: '# - rsnapshot_client'
  

- name: Commenting ossec_client 
  lineinfile: 
     path: systems-model/build/{{clustername}}/public_dns.yaml
     regexp: '- ossec_client'
     line: '# - ossec_client'

- name: Commenting rsnapshot_client 
  lineinfile: 
     path: systems-model/build/{{clustername}}/private_dns.yaml
     regexp: '- rsnapshot_client'
     line: '# - rsnapshot_client'
  

- name: Commenting ossec_client 
  lineinfile: 
     path: systems-model/build/{{clustername}}/private_dns.yaml
     regexp: '- ossec_client'
     line: '# - ossec_client'


- name: Running public_dns playbook
  command: ansible-playbook -i hosts public_dns.yaml
  #environment: "{{proxy_env}}"
  register: out
  args: 
    chdir: systems-model/build/{{clustername}}/
- debug: 
    var: out


- name: Running private_dns playbook
  command: ansible-playbook -i hosts private_dns.yaml
  #environment: "{{proxy_env}}"
  register: out
  args: 
    chdir: systems-model/build/{{clustername}}/
- debug: 
     var: out




#+END_SRC

#+BEGIN_SRC yml :tangle config-with-vlead-user/tasks/router.yml

---
- name: Commenting rsnapshot_client
  replace:
     path: systems-model/build/{{clustername}}/router.yaml
     regexp: '^    - rsnapshot_client'
     replace: '    # - rsnapshot_client'


- name: Commenting ossec_client
  replace:
     path: systems-model/build/{{clustername}}/router.yaml
     regexp: '^    - ossec_client'
     replace: '    # - ossec_client'

- name: Running router playbook
  command: ansible-playbook -i hosts router.yaml
  environment: "{{proxy_env}}"
  register: out
  args:
    chdir: systems-model/build/{{clustername}}/
- debug:
    var: out



#+END_SRC

#+BEGIN_SRC yml :tangle config-with-vlead-user/tasks/ads.yml

---
- name: installing git
  command: ssh root@10.100.1.9 yum install -y git
  register: out
- debug: var=out.stdout_lines

- name: Generating sshkeys
  command: ssh root@10.100.1.9  "ssh-keygen -t rsa -f ~/.ssh/id_rsa| echo no"
  register: out
- debug: var=out.stdout_lines

- name: Get public key from ADS server from root account
  command: ssh root@10.100.1.9 "cat ~/.ssh/id_rsa.pub"
  register: ssh_keys

- name: install eple-release and sshpass
  command: ssh root@10.100.1.9 "{{item}}"
  with_items:
   - export http_proxy={{proxy_env.http_proxy}} 
   - export https_proxy={{proxy_env.https_proxy}} 
   - yum install -y epel-release
   - yum install -y sshpass
- name: Set StrictHostKeyChecking no
  command: ssh root@10.100.1.9 'sed -i "/^StrictHostKeyChecking.*/d" /etc/ssh/ssh_config && echo StrictHostKeyChecking=no >> /etc/ssh/ssh_config'

- name: Copying keys
  command: ssh root@10.100.1.9 'sshpass -p "vlead123" ssh-copy-id root@"{{ipaddress.hostmachine}}"'
  register: out
- debug: var=out.stdout_lines

- name: check keys
  debug: msg="{{ ssh_keys.stdout }}"
  tags:
   - ssh

- name: deploy keys on localhost at vlead user
  authorized_key: user=vlead key="{{ item }}"
  delegate_to: "{{ipaddress.config_server}}"
  with_items:
    - 'command="hooks.sh",no-port-forwarding,no-X11-forwarding,no-agent-forwarding,no-pty {{ ssh_keys.stdout }}'
  tags:
    - ssh



#+END_SRC

#+BEGIN_SRC yml :tangle config-with-vlead-user/tasks/knownhost.yml

---
- name: Get public key from ADS server from root account
  command: "cat ~/.ssh/id_rsa.pub"
  register: ssh_keys

- name: check keys
  debug: msg="{{ ssh_keys.stdout }}"
  tags:
   - ssh
- name: Delopying keys on localhost at vlead 
  lineinfile: path=~/.ssh/known_hosts regexp="^ansible.{{clustername}}.vlabs.ac.in.*"  line='ansible.{{clustername}}.vlabs.ac.in {{ssh_keys.stdout}}' state=present
- name: Deploying keys on localhost 
  lineinfile: path=~/.ssh/known_hosts regexp="^10.100.1.2.*"  line='10.100.1.2 {{ ssh_keys.stdout }}' state=present

- name: Deploying keys on localhost 
  lineinfile: path=~/.ssh/known_hosts regexp="^ansible.{{clustername}}.virtual-labs.ac.in.*"  line='ansible.{{clustername}}.virtual-labs.ac.in {{ ssh_keys.stdout }}' state=present
     

- name: deploy keys on localhost at vlead user
  command: echo "{{item}}" >> ~/.ssh/known_hosts
  register: out
  with_items:
    - '10.100.1.2 {{ ssh_keys.stdout }}'
    - 'ansible.{{clustername}}.virtual-labs.ac.in {{ ssh_keys.stdout }}'
  tags:
    - ssh

- debug: var=out.stdout_lines
- name: deploy keys on localhost at vlead user
  known_hosts: name=10.2.59.222 key="{{item}}" path=~/.ssh/known_hosts
  with_items:
   - 'ansible.{{clustername}}.vlabs.ac.in {{ssh_keys.stdout}}'
   - '10.100.1.2 {{ ssh_keys.stdout }}'
   - 'ansible.{{clustername}}.virtual-labs.ac.in {{ ssh_keys.stdout }}'
  tags:
      - ssh



#+END_SRC

#+BEGIN_SRC yml :tangle config-with-vlead-user/tasks/gitclone_to_ads.yml

---

- name: git cloning 
  command: ssh root@10.100.1.9 "{{export_proxy}} && git clone {{setup_ovpl_centos}} && cd cluster-setup-ovpl-centos &&  git checkout cluster-ads"
  ignore_errors: yes
  register: out
- debug: var=out.stdout_lines

- name: Running centos-prepare-ovpl shell
  command: ssh root@10.100.1.9 "{{export_proxy}} && cd cluster-setup-ovpl-centos/scripts && ./centos_prepare_ovpl.sh"
  register: out  
- debug: var=out.stdout_lines

- name: Creating Required new files
  command: ssh root@10.100.1.9 "cd ovpl/config && cp sample_config.json config.json && cp sample_authorized_users.py authorized_users.py && cd adapters && cp sample_centos_bridged_config.py centos_bridged_config.py && cp sample_base_config.py base_config.py && cd .. "
  register: out
- debug: var=out.stdout_lines



#+END_SRC

#+BEGIN_SRC yml :tangle config-with-vlead-user/tasks/cluster_site.yml

---
 - name: Replacing private-dns-ips
   replace:
        path: systems-model/build/{{clustername}}/roles/common_vars/vars/main.yml       
        regexp: 'private_dns_ips: none'
        replace: 'private_dns_ips: 10.100.1.5'
       
 - name: Replacing private-dns-zone
   replace:
        path: systems-model/build/{{clustername}}/roles/common_vars/vars/main.yml       
        regexp: 'private_dns_zone: none'
        replace: 'private_dns_zone: "{{clustername}}.virtual-labs.ac.in {{clustername}}.vlabs.ac.in"'

 - name: Commenting  ossec-server.yaml file in site.yaml
   replace:
        path: systems-model/build/{{clustername}}/site.yaml     
        regexp: '^- include: ossec_server.yaml'
        replace: '#- include: ossec_server.yaml'
 

 


#+END_SRC

#+BEGIN_SRC yml :tangle config-with-vlead-user/tasks/site_modify.yml


 - name: Checking directory
   command: pwd
   register: out
 - debug: var=out.stdout_lines
 - name: commenting  ossec-client from ossec-server
   replace: 
      path: systems-model/build/{{clustername}}/ossec_server.yaml
      regexp: '^    - ossec_client'
      replace: '    # - ossec_client'
 
 - name: Uncommenting rsnapshot-client from ossec-server 
   replace: 
      path: systems-model/build/{{clustername}}/ossec_server.yaml
      regexp: '^    # - rsnapshot_client'
      replace: '    - rsnapshot_client'
 
 - name: commenting ossec-client from config-server
   replace: 
      path: systems-model/build/{{clustername}}/config_server.yaml
      regexp: '^    - ossec_client'
      replace: '    # - ossec_client'
 
 - name: Uncommenting rsnapshot-client from config-server 
   replace: 
      path: systems-model/build/{{clustername}}/config_server.yaml
      regexp: '^    # - rsnapshot_client'
      replace: '    - rsnapshot_client'

 
 - name: commenting oseec-client from nagios-server
   replace: 
      path: systems-model/build/{{clustername}}/nagios_server.yaml
      regexp: '^    - ossec_client'
      replace: '    # - ossec_client'
 
 - name: Uncommenting rsnapshot-client from nagios-server
   replace: 
      path: systems-model/build/{{clustername}}/nagios_server.yaml
      regexp: '^    # - rsnapshot_client'
      replace: '    - rsnapshot_client'


 - name: commenting oseec-client from public-dns-server
   replace: 
      path: systems-model/build/{{clustername}}/public_dns.yaml
      regexp: '^    - ossec_client'
      replace: '    # - ossec_client'
 
 - name: Uncommenting rsnapshot-client from public-dns-server
   replace: 
      path: systems-model/build/{{clustername}}/public_dns.yaml
      regexp: '^    # - rsnapshot_client'
      replace: '    - rsnapshot_client'

 - name: commenting oseec-client from reverseproxy-server
   replace: 
      path: systems-model/build/{{clustername}}/reverseproxy_server.yaml
      regexp: '^    - ossec_client'
      replace: '    # - ossec_client'
 
 - name: Uncommenting rsnapshot-client from reverseproxy-server
   replace: 
      path: systems-model/build/{{clustername}}/reverseproxy_server.yaml
      regexp: '^    # - rsnapshot_client'
      replace: '    - rsnapshot_client'


 - name: commenting oseec-client from router
   replace: 
      path: systems-model/build/{{clustername}}/router.yaml
      regexp: '^    - ossec_client'
      replace: '    # - ossec_client'
 
 - name: Uncommenting rsnapshot-client from router
   replace: 
      path: systems-model/build/{{clustername}}/router.yaml
      regexp: '^    # - rsnapshot_client'
      replace: '    - rsnapshot_client'


 - name: commenting oseec-client from private-dns-server
   replace: 
      path: systems-model/build/{{clustername}}/private_dns.yaml
      regexp: '^    - ossec_client'
      replace: '    # - ossec_client'
 
 - name: Uncommenting rsnapshot-client from private-dns-server
   replace: 
      path: systems-model/build/{{clustername}}/private_dns.yaml
      regexp: '^    # - rsnapshot_client'
      replace: '    - rsnapshot_client'


 - name: commenting oseec-client from rsnapshot-server
   replace: 
      path: systems-model/build/{{clustername}}/rsnapshot_server.yaml
      regexp: '^    - ossec_client'
      replace: '    # - ossec_client'
 
 - name: Uncommenting rsnapshot-client from rsnapshot-server
   replace: 
      path: systems-model/build/{{clustername}}/rsnapshot_server.yaml
      regexp: '^    # - rsnapshot_client'
      replace: '    - rsnapshot_client'


 - name: commenting oseec-client from rsyslog-server
   replace: 
      path: systems-model/build/{{clustername}}/rsyslog_server.yaml
      regexp: '^    - ossec_client'
      replace: '    # - ossec_client'
 
 - name: Uncommenting rsnapshot-client from rsyslog-server
   replace: 
      path: systems-model/build/{{clustername}}/rsyslog_server.yaml
      regexp: '^    # - rsnapshot_client'
      replace: '    - rsnapshot_client'


#+END_SRC

#+BEGIN_SRC yml :tangle config-with-vlead-user/tasks/site_run.yml


- name: Testing  site yml file using ansible
  command: ansible-playbook -i hosts --list-tasks --syntax-check site.yaml
  register: out
  args:
     chdir: systems-model/build/{{clustername}}/
- debug: var=out.stdout_lines



- name: Running site yml file using ansible
  command: ansible-playbook -i hosts  site.yaml
  register: out
  args:
     chdir: systems-model/build/{{clustername}}/
- debug: var=out.stdout_lines


#+END_SRC


#+BEGIN_SRC yml :tangle config-with-vlead-user/handlers/main.yml

---
# handlers file for config-with-vlead-user
- name: restart_ssh
  service: name=sshd state=restarted


#+END_SRC


#+BEGIN_SRC yml :tangle config-with-vlead-user/meta/main.yml

dependencies:
    - common-vars

#+END_SRC

#+BEGIN_SRC yml :tangle config-with-vlead-user/templates/set-proxy.yml

---

- hosts: router
  remote_user: root

  tasks: 
  - name: Delete proxy if there is any
    lineinfile: path=/etc/yum.conf regexp="^proxy.*" line="" state=present
  - name: set proxy
    lineinfile: path=/etc/yum.conf regexp="^proxy.*" line="proxy={{proxy_env.http_proxy}}" state=present

- hosts: private_dns
  remote_user: root

  tasks: 
  - name: Delete proxy if there is any
    lineinfile: path=/etc/yum.conf regexp="^proxy.*" line="" state=present
  - name: set proxy
    lineinfile: path=/etc/yum.conf regexp="^proxy.*" line="proxy={{proxy_env.http_proxy}}" state=present


- hosts: public_dns
  remote_user: root

  tasks: 
   - name: Delete proxy if there is any
     lineinfile: path=/etc/yum.conf regexp="^proxy.*" line="" state=present
   - name: set proxy
     lineinfile: path=/etc/yum.conf regexp="^proxy.*" line="proxy={{proxy_env.http_proxy}}" state=present

- hosts: ossec_server
  remote_user: root

  tasks: 

   - name: Delete proxy if there is any
     lineinfile: path=/etc/yum.conf regexp="^proxy.*" line="" state=present
   - name: set proxy
     lineinfile: path=/etc/yum.conf regexp="^proxy.*" line="proxy={{proxy_env.http_proxy}}" state=present

- hosts: rsyslog_server
  remote_user: root

  tasks: 

   - name: Delete proxy if there is any
     lineinfile: path=/etc/yum.conf regexp="^proxy.*" line="" state=present
   - name: set proxy
     lineinfile: path=/etc/yum.conf regexp="^proxy.*" line="proxy={{proxy_env.http_proxy}}" state=present

- hosts: reverseproxy_server 
  remote_user: root

  tasks: 
   - name: Delete proxy if there is any
     lineinfile: path=/etc/yum.conf regexp="^proxy.*" line="" state=present
   - name: set proxy
     lineinfile: path=/etc/yum.conf regexp="^proxy.*" line="proxy={{proxy_env.http_proxy}}" state=present


- hosts: nagios_server 
  remote_user: root

  tasks: 
   - name: Delete proxy if there is any
     lineinfile: path=/etc/yum.conf regexp="^proxy.*" line="" state=present
   - name: set proxy
     lineinfile: path=/etc/yum.conf regexp="^proxy.*" line="proxy={{proxy_env.http_proxy}}" state=present


- hosts: ads_server 
  remote_user: root

  tasks: 
   - name: Delete proxy if there is any
     lineinfile: path=/etc/yum.conf regexp="^proxy.*" line="" state=present
   - name: set proxy
     lineinfile: path=/etc/yum.conf regexp="^proxy.*" line="proxy={{proxy_env.http_proxy}}" state=present


- hosts: rsnapshot_server
  remote_user: root

  tasks: 
   - name: Delete proxy if there is any
     lineinfile: path=/etc/yum.conf regexp="^proxy.*" line="" state=present
   - name: set proxy
     lineinfile: path=/etc/yum.conf regexp="^proxy.*" line="proxy={{proxy_env.http_proxy}}" state=present



#+END_SRC

